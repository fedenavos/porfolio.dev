---
import { Image } from 'astro:assets';
import { t } from "i18next";
import i18next from "i18next"
import { TAGS } from "../constants/tags";
import LinkButton from "./LinkButton.astro";
import GitHub from "./icons/GitHub.astro";
import Link from "./icons/Link.astro";

const currentLanguage = i18next.language
let pathPrefix = ""
if (currentLanguage !== "es") {
  pathPrefix = `${currentLanguage}/`
}
console.log(pathPrefix)

const PROJECTS = [
  {
    title: t("projects.chat-bot.title"),
    description: t("projects.chat-bot.description"),
    link: "https://mibot.vercel.app/",
    github: "https://github.com/fedenavos/chat-bot",
    logo: "/projects/chatbot.webp",
    previewImage: "/projects/demo-chatbot.png",
    tags: [TAGS.NEXT],
  },
  {
    title: t("projects.lookeando.title"),
    description: t("projects.lookeando.description"),
    link: "https://lookeando.com",
    logo: "/projects/lookeando.png",
    previewImage: "/projects/lookeando.png",
    tags: [TAGS.REACT, TAGS.PYTHON],
  },
  {
    title: t("projects.gather.title"),
    description: t("projects.gather.description"),
    link: "https://gather-vert.vercel.app/",
    github: "https://github.com/fedenavos/Gather",
    logo: "/projects/gathertrips.png",
    previewImage: "https://camo.githubusercontent.com/04901a2aefe366bf5af999067b3f88f46ecc70a35a6578d0905c5b8c1d24fbfa/68747470733a2f2f692e696d6775722e636f6d2f706573534c4e612e706e67",
    tags: [TAGS.NEXT],
  },
  {
    title: t("projects.repe-app.title"),
    description: t("projects.repe-app.description"),
    link: "https://repe-app.vercel.app",
    github: "https://github.com/fedenavos/repe-app",
    logo: "/projects/qatar-2022.jpg",
    previewImage: "/projects/repe-demo.png",
    tags: [TAGS.REACT],
  },
  {
    title: t("projects.pelibry.title"),
    description: t("projects.pelibry.description"),
    link: `${pathPrefix}projects/pelibry`,
    github: "https://github.com/fedenavos/pelibry_app",
    logo: "/projects/Pelibry.webp",
    previewImage: "/projects/pelibry-main.jpg",
    tags: [TAGS.FLUTTER],
  },
  {
    title: t("projects.quedate-en-casa.title"),
    description: t("projects.quedate-en-casa.description"),
    link: `${pathPrefix}projects/coronatime`,
    logo: "/projects/coronatime-logo.png",
    previewImage: "/projects/coronatime-game2.jpg",
    tags: [TAGS.UNITY],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ logo, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/3">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl">
            <Image
              title={title}
              alt={title}
              class="h-54 aspect-square transition duration-500 sm:h-full md:scale-100 md:group-hover:scale-110"
              src={logo}
              width={300}
              height={300}
            />
          </div>
        </div>

        <div class="w-full md:w-2/3 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    {tag.icon && <tag.icon class="size-4" />}
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
